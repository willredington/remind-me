generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Profile {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @unique
  userName  String

  locations   Location[]
  frequencies Frequency[]

  tasks         Task[]
  taskTemplates TaskTemplate[]
}

model Location {
  id                 String   @id @default(uuid())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  isPreferred        Boolean  @default(false)
  type               String
  address            String
  name               String
  description        String?
  latitude           Float
  longitude          Float
  latitudeDirection  String
  longitudeDirection String

  ownerId String
  owner   Profile @relation(fields: [ownerId], references: [id])

  taskTemplates TaskTemplate[]

  origins      Task[] @relation("origin")
  destinations Task[] @relation("destination")
}

model Frequency {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  unit      String
  value     Int
  days      String[] // FIXME: will come back to this
  endDate   DateTime?

  ownerId String
  owner   Profile @relation(fields: [ownerId], references: [id])

  taskTemplates TaskTemplate[]
}

model TaskTemplate {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String?
  priority    String?
  isAuto      Boolean  @default(false)

  ownerId String
  owner   Profile @relation(fields: [ownerId], references: [id])

  destinationId String
  destination   Location @relation(fields: [destinationId], references: [id])

  frequencyId String?
  frequency   Frequency? @relation(fields: [frequencyId], references: [id])

  tasks Task[]
}

model Task {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime

  ownerId String
  owner   Profile @relation(fields: [ownerId], references: [id])

  originId String
  origin   Location @relation(name: "origin", fields: [originId], references: [id])

  destinationId String
  destination   Location @relation(name: "destination", fields: [destinationId], references: [id])

  templateId String?
  template   TaskTemplate? @relation(fields: [templateId], references: [id])
}
